UNIT PALETTES;

INTERFACE

type Palette216 = array[0..647] of byte;

procedure showpalette {
    displays the current 216 color palette in a grid
};
procedure fadepalette(const smoothing: byte) {
    darkens / washes out current palette
};
procedure setpalette(const palette: Palette216) {
    sets the 216 palette to values stored in `palette`
};

type PaletteCollection = record
     LEVELED: Palette216;
     POSTERIZED: Palette216;
     AGGRESSIVE: Palette216;
     VAPORWAVE: Palette216;
     OUTRUN: Palette216
end;

const palette: PaletteCollection = (
      LEVELED: (
          0,  0,  0,  0,  0, 10,  0,  0, 19,  0,  0, 29,  0,  0, 43,  0,  0,
         63,  0, 10,  0,  0, 10, 10,  0, 10, 19,  0, 10, 29,  0, 10, 43,  0,
         10, 63,  0, 19,  0,  0, 19, 10,  0, 19, 19,  0, 19, 29,  0, 19, 43,
          0, 19, 63,  0, 29,  0,  0, 29, 10,  0, 29, 19,  0, 29, 29,  0, 29,
         43,  0, 29, 63,  0, 43,  0,  0, 43, 10,  0, 43, 19,  0, 43, 29,  0,
         43, 43,  0, 43, 63,  0, 63,  0,  0, 63, 10,  0, 63, 19,  0, 63, 29,
          0, 63, 43,  0, 63, 63, 10,  0,  0, 10,  0, 10, 10,  0, 19, 10,  0,
         29, 10,  0, 43, 10,  0, 63, 10, 10,  0, 10, 10, 10, 10, 10, 19, 10,
         10, 29, 10, 10, 43, 10, 10, 63, 10, 19,  0, 10, 19, 10, 10, 19, 19,
         10, 19, 29, 10, 19, 43, 10, 19, 63, 10, 29,  0, 10, 29, 10, 10, 29,
         19, 10, 29, 29, 10, 29, 43, 10, 29, 63, 10, 43,  0, 10, 43, 10, 10,
         43, 19, 10, 43, 29, 10, 43, 43, 10, 43, 63, 10, 63,  0, 10, 63, 10,
         10, 63, 19, 10, 63, 29, 10, 63, 43, 10, 63, 63, 19,  0,  0, 19,  0,
         10, 19,  0, 19, 19,  0, 29, 19,  0, 43, 19,  0, 63, 19, 10,  0, 19,
         10, 10, 19, 10, 19, 19, 10, 29, 19, 10, 43, 19, 10, 63, 19, 19,  0,
         19, 19, 10, 19, 19, 19, 19, 19, 29, 19, 19, 43, 19, 19, 63, 19, 29,
          0, 19, 29, 10, 19, 29, 19, 19, 29, 29, 19, 29, 43, 19, 29, 63, 19,
         43,  0, 19, 43, 10, 19, 43, 19, 19, 43, 29, 19, 43, 43, 19, 43, 63,
         19, 63,  0, 19, 63, 10, 19, 63, 19, 19, 63, 29, 19, 63, 43, 19, 63,
         63, 29,  0,  0, 29,  0, 10, 29,  0, 19, 29,  0, 29, 29,  0, 43, 29,
          0, 63, 29, 10,  0, 29, 10, 10, 29, 10, 19, 29, 10, 29, 29, 10, 43,
         29, 10, 63, 29, 19,  0, 29, 19, 10, 29, 19, 19, 29, 19, 29, 29, 19,
         43, 29, 19, 63, 29, 29,  0, 29, 29, 10, 29, 29, 19, 29, 29, 29, 29,
         29, 43, 29, 29, 63, 29, 43,  0, 29, 43, 10, 29, 43, 19, 29, 43, 29,
         29, 43, 43, 29, 43, 63, 29, 63,  0, 29, 63, 10, 29, 63, 19, 29, 63,
         29, 29, 63, 43, 29, 63, 63, 43,  0,  0, 43,  0, 10, 43,  0, 19, 43,
          0, 29, 43,  0, 43, 43,  0, 63, 43, 10,  0, 43, 10, 10, 43, 10, 19,
         43, 10, 29, 43, 10, 43, 43, 10, 63, 43, 19,  0, 43, 19, 10, 43, 19,
         19, 43, 19, 29, 43, 19, 43, 43, 19, 63, 43, 29,  0, 43, 29, 10, 43,
         29, 19, 43, 29, 29, 43, 29, 43, 43, 29, 63, 43, 43,  0, 43, 43, 10,
         43, 43, 19, 43, 43, 29, 43, 43, 43, 43, 43, 63, 43, 63,  0, 43, 63,
         10, 43, 63, 19, 43, 63, 29, 43, 63, 43, 43, 63, 63, 63,  0,  0, 63,
          0, 10, 63,  0, 19, 63,  0, 29, 63,  0, 43, 63,  0, 63, 63, 10,  0,
         63, 10, 10, 63, 10, 19, 63, 10, 29, 63, 10, 43, 63, 10, 63, 63, 19,
          0, 63, 19, 10, 63, 19, 19, 63, 19, 29, 63, 19, 43, 63, 19, 63, 63,
         29,  0, 63, 29, 10, 63, 29, 19, 63, 29, 29, 63, 29, 43, 63, 29, 63,
         63, 43,  0, 63, 43, 10, 63, 43, 19, 63, 43, 29, 63, 43, 43, 63, 43,
         63, 63, 63,  0, 63, 63, 10, 63, 63, 19, 63, 63, 29, 63, 63, 43, 63,
         63, 63);
      POSTERIZED: (
          0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0, 12,  0,  0, 30,  0,  0,
         63,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0, 12,  0,  0, 30,  0,
          0, 63,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0, 12,  0,  0, 30,
          0,  0, 63,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0, 12,  0,  0,
         30,  0,  0, 63,  0, 21,  0,  0, 21,  0,  0, 21,  6,  0, 21, 12,  0,
         21, 30,  0, 21, 63,  0, 63,  0,  0, 63,  0,  0, 63,  6,  0, 63, 12,
          0, 63, 30,  0, 63, 63,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,  0,
         12,  0,  0, 30,  0,  0, 63,  0,  0,  0,  0,  0,  0,  0,  0,  6,  0,
          0, 12,  0,  0, 30,  0,  0, 63,  0,  0,  0,  0,  0,  0,  0,  0,  6,
          0,  0, 12,  0,  0, 30,  0,  0, 63,  0,  0,  0,  0,  0,  0,  0,  0,
          6,  0,  0, 12,  0,  0, 30,  0,  0, 63,  0, 21,  0,  0, 21,  0,  0,
         21,  6,  0, 21, 12,  0, 21, 30,  0, 21, 63,  0, 63,  0,  0, 63,  0,
          0, 63,  6,  0, 63, 12,  0, 63, 30,  0, 63, 63,  5,  0,  0,  5,  0,
          0,  5,  0,  6,  5,  0, 12,  5,  0, 30,  5,  0, 63,  5,  0,  0,  5,
          0,  0,  5,  0,  6,  5,  0, 12,  5,  0, 30,  5,  0, 63,  5,  0,  0,
          5,  0,  0,  5,  0,  6,  5,  0, 12,  5,  0, 30,  5,  0, 63,  5,  0,
          0,  5,  0,  0,  5,  0,  6,  5,  0, 12,  5,  0, 30,  5,  0, 63,  5,
         21,  0,  5, 21,  0,  5, 21,  6,  5, 21, 12,  5, 21, 30,  5, 21, 63,
          5, 63,  0,  5, 63,  0,  5, 63,  6,  5, 63, 12,  5, 63, 30,  5, 63,
         63, 13,  0,  0, 13,  0,  0, 13,  0,  6, 13,  0, 12, 13,  0, 30, 13,
          0, 63, 13,  0,  0, 13,  0,  0, 13,  0,  6, 13,  0, 12, 13,  0, 30,
         13,  0, 63, 13,  0,  0, 13,  0,  0, 13,  0,  6, 13,  0, 12, 13,  0,
         30, 13,  0, 63, 13,  0,  0, 13,  0,  0, 13,  0,  6, 13,  0, 12, 13,
          0, 30, 13,  0, 63, 13, 21,  0, 13, 21,  0, 13, 21,  6, 13, 21, 12,
         13, 21, 30, 13, 21, 63, 13, 63,  0, 13, 63,  0, 13, 63,  6, 13, 63,
         12, 13, 63, 30, 13, 63, 63, 30,  0,  0, 30,  0,  0, 30,  0,  6, 30,
          0, 12, 30,  0, 30, 30,  0, 63, 30,  0,  0, 30,  0,  0, 30,  0,  6,
         30,  0, 12, 30,  0, 30, 30,  0, 63, 30,  0,  0, 30,  0,  0, 30,  0,
          6, 30,  0, 12, 30,  0, 30, 30,  0, 63, 30,  0,  0, 30,  0,  0, 30,
          0,  6, 30,  0, 12, 30,  0, 30, 30,  0, 63, 30, 21,  0, 30, 21,  0,
         30, 21,  6, 30, 21, 12, 30, 21, 30, 30, 21, 63, 30, 63,  0, 30, 63,
          0, 30, 63,  6, 30, 63, 12, 30, 63, 30, 30, 63, 63, 63,  0,  0, 63,
          0,  0, 63,  0,  6, 63,  0, 12, 63,  0, 30, 63,  0, 63, 63,  0,  0,
         63,  0,  0, 63,  0,  6, 63,  0, 12, 63,  0, 30, 63,  0, 63, 63,  0,
          0, 63,  0,  0, 63,  0,  6, 63,  0, 12, 63,  0, 30, 63,  0, 63, 63,
          0,  0, 63,  0,  0, 63,  0,  6, 63,  0, 12, 63,  0, 30, 63,  0, 63,
         63, 21,  0, 63, 21,  0, 63, 21,  6, 63, 21, 12, 63, 21, 30, 63, 21,
         63, 63, 63,  0, 63, 63,  0, 63, 63,  6, 63, 63, 12, 63, 63, 30, 63,
         63, 63);
      AGGRESSIVE: (
          0,  0,  0,  0,  2,  0,  0,  6,  1,  0, 14,  4,  0, 30,  8,  0, 62,
         17,  2,  0,  0,  1,  2,  0,  0,  6,  0,  0, 14,  2,  0, 30,  6,  0,
         62, 15,  6,  1,  0,  6,  3,  0,  4,  6,  0,  2, 14,  0,  0, 30,  2,
          0, 62, 11, 14,  4,  0, 14,  6,  0, 14, 10,  0, 10, 14,  0,  5, 30,
          0,  0, 62,  3, 30,  8,  0, 30, 10,  0, 30, 14,  0, 30, 22,  0, 21,
         30,  0, 12, 62,  0, 62, 17,  0, 62, 19,  0, 62, 23,  0, 62, 31,  0,
         62, 47,  0, 44, 62,  0,  0,  0,  2,  0,  1,  2,  0,  6,  3,  0, 14,
          6,  0, 30, 10,  0, 62, 19,  2,  0,  1,  2,  2,  2,  2,  6,  3,  2,
         14,  5,  2, 30, 10,  2, 62, 19,  6,  0,  0,  6,  3,  2,  4,  6,  2,
          2, 14,  2,  2, 30,  6,  2, 62, 15, 14,  2,  0, 14,  5,  2, 14,  9,
          2, 10, 14,  2,  6, 30,  2,  2, 62,  7, 30,  6,  0, 30, 10,  2, 30,
         14,  2, 30, 22,  2, 22, 30,  2, 13, 62,  2, 62, 15,  0, 62, 19,  2,
         62, 23,  2, 62, 31,  2, 62, 47,  2, 45, 62,  2,  1,  0,  6,  0,  0,
          6,  0,  4,  6,  0, 14, 10,  0, 30, 14,  0, 62, 23,  3,  0,  6,  3,
          2,  6,  2,  4,  6,  2, 14,  9,  2, 30, 14,  2, 62, 23,  6,  0,  4,
          6,  2,  4,  6,  6,  6,  6, 14,  8,  6, 30, 12,  6, 62, 21, 14,  0,
          2, 14,  2,  2, 14,  8,  6, 11, 14,  6,  7, 30,  6,  6, 62, 13, 30,
          2,  0, 30,  6,  2, 30, 12,  6, 30, 20,  6, 23, 30,  6, 14, 62,  6,
         62, 11,  0, 62, 15,  2, 62, 21,  6, 62, 29,  6, 62, 45,  6, 46, 62,
          6,  4,  0, 14,  2,  0, 14,  0,  2, 14,  0, 10, 14,  0, 30, 22,  0,
         62, 31,  6,  0, 14,  5,  2, 14,  2,  2, 14,  2, 10, 14,  2, 30, 22,
          2, 62, 31, 10,  0, 14,  9,  2, 14,  8,  6, 14,  6, 11, 14,  6, 30,
         20,  6, 62, 29, 14,  0, 10, 14,  2, 10, 14,  6, 11, 14, 14, 14, 14,
         30, 18, 14, 62, 27, 30,  0,  5, 30,  2,  6, 30,  6,  7, 30, 18, 14,
         25, 30, 14, 16, 62, 14, 62,  3,  0, 62,  7,  2, 62, 13,  6, 62, 27,
         14, 62, 43, 14, 48, 62, 14,  8,  0, 30,  6,  0, 30,  2,  0, 30,  0,
          5, 30,  0, 21, 30,  0, 62, 47, 10,  0, 30, 10,  2, 30,  6,  2, 30,
          2,  6, 30,  2, 22, 30,  2, 62, 47, 14,  0, 30, 14,  2, 30, 12,  6,
         30,  6,  7, 30,  6, 23, 30,  6, 62, 45, 22,  0, 30, 22,  2, 30, 20,
          6, 30, 18, 14, 30, 14, 25, 30, 14, 62, 43, 30,  0, 21, 30,  2, 22,
         30,  6, 23, 30, 14, 25, 30, 30, 30, 30, 62, 39, 62,  0, 12, 62,  2,
         13, 62,  6, 14, 62, 14, 16, 62, 39, 30, 53, 62, 30, 17,  0, 62, 15,
          0, 62, 11,  0, 62,  3,  0, 62,  0, 12, 62,  0, 44, 62, 19,  0, 62,
         19,  2, 62, 15,  2, 62,  7,  2, 62,  2, 13, 62,  2, 45, 62, 23,  0,
         62, 23,  2, 62, 21,  6, 62, 13,  6, 62,  6, 14, 62,  6, 46, 62, 31,
          0, 62, 31,  2, 62, 29,  6, 62, 27, 14, 62, 14, 16, 62, 14, 48, 62,
         47,  0, 62, 47,  2, 62, 45,  6, 62, 43, 14, 62, 39, 30, 62, 30, 53,
         62, 62,  0, 44, 62,  2, 45, 62,  6, 46, 62, 14, 48, 62, 30, 53, 62,
         62, 62);
      VAPORWAVE: (
         45,  0, 44, 45,  0, 47, 44,  0, 53, 44,  0, 63, 43,  0, 63, 43,  0,
         63, 44,  0, 44, 44,  0, 47, 43,  0, 53, 43,  0, 63, 42,  0, 63, 42,
          0, 63, 43,  0, 42, 43,  0, 45, 42,  0, 51, 42,  0, 63, 41,  0, 63,
         41,  0, 63, 40,  9, 39, 40,  9, 42, 39,  9, 49, 39,  8, 61, 38,  7,
         63, 38,  7, 63, 34, 29, 34, 34, 29, 37, 34, 29, 43, 33, 28, 55, 32,
         27, 63, 32, 27, 63, 23, 63, 22, 23, 63, 25, 22, 63, 31, 22, 63, 44,
         21, 63, 63, 21, 63, 63, 47,  0, 44, 47,  0, 47, 47,  0, 53, 47,  0,
         63, 46,  0, 63, 45,  0, 63, 47,  0, 43, 47,  0, 46, 46,  0, 52, 46,
          0, 63, 45,  0, 63, 45,  0, 63, 45,  0, 42, 45,  0, 45, 45,  0, 51,
         45,  0, 63, 44,  0, 63, 43,  0, 63, 42,  8, 39, 43,  9, 42, 42,  8,
         48, 42,  8, 60, 41,  7, 63, 40,  6, 63, 37, 29, 33, 37, 28, 36, 36,
         28, 42, 36, 27, 55, 35, 26, 63, 35, 27, 63, 26, 63, 22, 26, 63, 25,
         25, 63, 31, 25, 63, 43, 24, 63, 63, 24, 63, 63, 53,  0, 43, 53,  0,
         46, 53,  0, 52, 52,  0, 63, 51,  0, 63, 51,  0, 63, 53,  0, 43, 52,
          0, 46, 52,  0, 52, 51,  0, 63, 50,  0, 63, 50,  0, 63, 51,  0, 41,
         51,  0, 44, 51,  0, 50, 50,  0, 63, 49,  0, 63, 49,  0, 63, 48,  8,
         38, 48,  8, 41, 48,  7, 47, 47,  7, 60, 46,  6, 63, 46,  6, 63, 43,
         28, 33, 42, 28, 36, 42, 27, 42, 42, 27, 54, 40, 26, 63, 41, 26, 63,
         31, 63, 21, 31, 63, 24, 31, 63, 30, 31, 63, 43, 29, 63, 63, 29, 63,
         63, 63,  0, 42, 63,  0, 45, 63,  0, 51, 63,  0, 63, 62,  0, 63, 62,
          0, 63, 63,  0, 41, 63,  0, 44, 63,  0, 50, 63,  0, 63, 62,  0, 63,
         62,  0, 63, 63,  0, 40, 62,  0, 43, 62,  0, 49, 61,  0, 61, 60,  0,
         63, 60,  0, 63, 60,  6, 37, 59,  6, 40, 59,  6, 46, 59,  6, 58, 57,
          4, 63, 58,  4, 63, 54, 27, 31, 54, 26, 34, 54, 26, 40, 53, 25, 53,
         52, 24, 63, 52, 24, 63, 43, 63, 20, 42, 63, 23, 42, 63, 29, 42, 63,
         41, 41, 63, 63, 40, 63, 63, 63,  0, 39, 63,  0, 42, 63,  0, 48, 63,
          0, 60, 63,  0, 63, 63,  0, 63, 63,  0, 38, 63,  0, 41, 63,  0, 47,
         63,  0, 60, 63,  0, 63, 63,  0, 63, 63,  0, 37, 63,  0, 40, 63,  0,
         46, 63,  0, 58, 63,  0, 63, 63,  0, 63, 63,  4, 34, 63,  3, 37, 63,
          3, 43, 63,  3, 56, 63,  1, 63, 63,  1, 63, 63, 23, 28, 63, 23, 31,
         63, 23, 38, 63, 23, 50, 63, 22, 63, 63, 21, 63, 63, 63, 17, 63, 63,
         20, 63, 63, 26, 63, 63, 39, 63, 62, 63, 63, 61, 63, 63,  0, 39, 63,
          0, 42, 63,  0, 48, 63,  0, 60, 63,  0, 63, 63,  0, 63, 63,  0, 38,
         63,  0, 41, 63,  0, 47, 63,  0, 59, 63,  0, 63, 63,  0, 63, 63,  0,
         37, 63,  0, 40, 63,  0, 46, 63,  0, 58, 63,  0, 63, 63,  0, 63, 63,
          3, 34, 63,  3, 37, 63,  3, 43, 63,  3, 55, 63,  2, 63, 63,  1, 63,
         63, 24, 28, 63, 23, 31, 63, 23, 37, 63, 22, 50, 63, 21, 63, 63, 21,
         63, 63, 63, 17, 63, 63, 20, 63, 63, 26, 63, 62, 38, 63, 61, 63, 63,
         61, 63);
     OUTRUN: (
          0,  0,  0,  0,  0,  6,  0,  0, 17,  0,  0, 29,  0,  0, 24,  0,  0,
         56,  0,  0,  0,  0,  0,  6,  0,  0, 17,  0,  0, 29,  0,  0, 24,  0,
          0, 56,  0,  0,  0,  0,  0,  6,  0,  0, 17,  0,  0, 29,  0,  0, 24,
          0,  0, 56,  0,  0,  0,  0,  0,  6,  0,  0, 17,  0,  0, 29,  0,  0,
         24,  0,  0, 56,  0,  7,  0,  0,  7,  6,  0,  7, 17,  0,  7, 29,  0,
          7, 24,  0,  7, 56,  0, 59,  0,  0, 59,  6,  0, 59, 17,  0, 59, 29,
          0, 59, 24,  0, 59, 56,  6,  0,  0,  6,  0,  6,  6,  0, 17,  6,  0,
         29,  6,  0, 24,  6,  0, 56,  6,  0,  0,  6,  0,  6,  6,  0, 17,  6,
          0, 29,  6,  0, 24,  6,  0, 56,  6,  0,  0,  6,  0,  6,  6,  0, 17,
          6,  0, 29,  6,  0, 24,  6,  0, 56,  6,  0,  0,  6,  0,  6,  6,  0,
         17,  6,  0, 29,  6,  0, 24,  6,  0, 56,  6,  7,  0,  6,  7,  6,  6,
          7, 17,  6,  7, 29,  6,  7, 24,  6,  7, 56,  6, 59,  0,  6, 59,  6,
          6, 59, 17,  6, 59, 29,  6, 59, 24,  6, 59, 56, 17,  0,  0, 17,  0,
          6, 17,  0, 17, 17,  0, 29, 17,  0, 24, 17,  0, 56, 17,  0,  0, 17,
          0,  6, 17,  0, 17, 17,  0, 29, 17,  0, 24, 17,  0, 56, 17,  0,  0,
         17,  0,  6, 17,  0, 17, 17,  0, 29, 17,  0, 24, 17,  0, 56, 17,  0,
          0, 17,  0,  6, 17,  0, 17, 17,  0, 29, 17,  0, 24, 17,  0, 56, 17,
          7,  0, 17,  7,  6, 17,  7, 17, 17,  7, 29, 17,  7, 24, 17,  7, 56,
         17, 59,  0, 17, 59,  6, 17, 59, 17, 17, 59, 29, 17, 59, 24, 17, 59,
         56, 29,  0,  0, 29,  0,  6, 29,  0, 17, 29,  0, 29, 29,  0, 24, 29,
          0, 56, 29,  0,  0, 29,  0,  6, 29,  0, 17, 29,  0, 29, 29,  0, 24,
         29,  0, 56, 29,  0,  0, 29,  0,  6, 29,  0, 17, 29,  0, 29, 29,  0,
         24, 29,  0, 56, 29,  0,  0, 29,  0,  6, 29,  0, 17, 29,  0, 29, 29,
          0, 24, 29,  0, 56, 29,  7,  0, 29,  7,  6, 29,  7, 17, 29,  7, 29,
         29,  7, 24, 29,  7, 56, 29, 59,  0, 29, 59,  6, 29, 59, 17, 29, 59,
         29, 29, 59, 24, 29, 59, 56, 24,  0,  0, 24,  0,  6, 24,  0, 17, 24,
          0, 29, 24,  0, 24, 24,  0, 56, 24,  0,  0, 24,  0,  6, 24,  0, 17,
         24,  0, 29, 24,  0, 24, 24,  0, 56, 24,  0,  0, 24,  0,  6, 24,  0,
         17, 24,  0, 29, 24,  0, 24, 24,  0, 56, 24,  0,  0, 24,  0,  6, 24,
          0, 17, 24,  0, 29, 24,  0, 24, 24,  0, 56, 24,  7,  0, 24,  7,  6,
         24,  7, 17, 24,  7, 29, 24,  7, 24, 24,  7, 56, 24, 59,  0, 24, 59,
          6, 24, 59, 17, 24, 59, 29, 24, 59, 24, 24, 59, 56, 56,  0,  0, 56,
          0,  6, 56,  0, 17, 56,  0, 29, 56,  0, 24, 56,  0, 56, 56,  0,  0,
         56,  0,  6, 56,  0, 17, 56,  0, 29, 56,  0, 24, 56,  0, 56, 56,  0,
          0, 56,  0,  6, 56,  0, 17, 56,  0, 29, 56,  0, 24, 56,  0, 56, 56,
          0,  0, 56,  0,  6, 56,  0, 17, 56,  0, 29, 56,  0, 24, 56,  0, 56,
         56,  7,  0, 56,  7,  6, 56,  7, 17, 56,  7, 29, 56,  7, 24, 56,  7,
         56, 56, 59,  0, 56, 59,  6, 56, 59, 17, 56, 59, 29, 56, 59, 24, 56,
         59, 56)
);

IMPLEMENTATION

uses graphics, shapes;

procedure showpalette;
var x, y: word;
    color: byte;
begin
    for color := 16 to 231 do begin
        x := (color - 16) mod 18 * 14 + 34;
        y := (color - 16) div 18 * 14 + 16;
        block(x, y, x+12, y+12, color);
    end;
end;

procedure fadepalette(const smoothing: byte); assembler {
    Darkens / washes out current palette
};
asm
    mov bl, 16              {start with first extended color}
    @loop_fade:
        mov ax, 1015h       {get RGB of color #BL}
        int 10h
        add dh, [smoothing] {red}
        add ch, [smoothing] {green}
        add cl, [smoothing] {blue}
        shr dh, 1
        shr cx, 1
        mov ax, 1010h       {set RGB of color #BL}
        int 10h
        add bl, 1           {proceed to next color}
        cmp bl, 232         {until all extended colors processed}
        jb  @loop_fade
end;

procedure setpalette(const palette: Palette216); assembler;
asm
    push ds          {DS is used by LDS, preserve value for after we're done}
    cld              {clear direction flag, auto-advance `palette` on read}
    lds  si, palette {make [ds:si] point to `palette`}
    mov  bx, 16      {start with first extended color}
    @iterate:
        lodsb            {load next byte from `palette` into AL}
        mov   dh, al     {dh = red}
        lodsb            {load next byte from `palette` into AL}
        mov   ch, al     {ch = green}
        lodsb            {load next byte from `palette` into AL}
        mov   cl, al     {cl = blue}
        mov   ax, 1010h  {set RGB of color #bl (#bx)}
        int   10h
        add   bx, 1      {proceed to next color}
        cmp   bx, 232
    jl @iterate
    pop  ds          {restore DS}
end;

end.
